/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aed.hospitalmanagement;

import com.aed.backend.PatientDirectory;
import com.aed.backend.DoctorDirectory;
import com.aed.backend.DoctorPerson;
import com.aed.backend.Encounter;
import com.aed.backend.EncounterHistory;
import com.aed.backend.Patient;
import com.aed.backend.Person;
import com.aed.backend.SystemAdmin;
import com.aed.backend.SystemAdminDirectory;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.LookAndFeel;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tarush
 */
public class hospitalManagement extends javax.swing.JFrame {
    String genderString = "Unknown";
    PatientDirectory dir = new PatientDirectory();
    DoctorDirectory docDir = new DoctorDirectory();
    EncounterHistory encHistory = new EncounterHistory();
    SystemAdminDirectory sysAdminDir = new SystemAdminDirectory();
    Encounter encToWorkWith = new Encounter();
    
    

    /**
     * Creates new form hospitalManagement
     */
    public hospitalManagement() {
        
        try{
            for (LookAndFeelInfo info: UIManager.getInstalledLookAndFeels()){
                if ("Nimbus".equals(info.getName())){
                    UIManager.setLookAndFeel((info.getClassName()));
                    break;
                }
            }
        }catch (Exception e) {
            //If something went wrong.
        }
        
        
        initComponents();
        medicalLicenseNumberTextField.setEnabled(false);
        userName.setEnabled(false);
        encounterID.setEnabled(false);
        patientAgeFieldVitalSignsRecording.setEnabled(false);
        bloodGroupFieldVitalSignsRecording.setEnabled(false);
        jTextArea4.setEnabled(false);
    }
    
    public void PanelPaint(JPanel page){
        Parent.removeAll();
        Parent.add(page);
        Parent.repaint();
        Parent.revalidate();
    }
    
    public void SplitPanelPaint(JPanel page){
        RightComponent.removeAll();
        RightComponent.add(page);
        RightComponent.repaint();
        RightComponent.revalidate();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        Parent = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        AppLogo = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        password = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Register = new javax.swing.JPanel();
        AppLogo1 = new javax.swing.JLabel();
        username1 = new javax.swing.JLabel();
        usernameTextField1 = new javax.swing.JTextField();
        password1 = new javax.swing.JLabel();
        passwordTextField1 = new javax.swing.JPasswordField();
        emailID = new javax.swing.JLabel();
        mailIDTextField = new javax.swing.JTextField();
        phone = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        role = new javax.swing.JLabel();
        rolesComboBox = new javax.swing.JComboBox<>();
        gender = new javax.swing.JLabel();
        maleButton = new javax.swing.JRadioButton();
        femaleButton = new javax.swing.JRadioButton();
        othersButton = new javax.swing.JRadioButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        DOB = new javax.swing.JLabel();
        register = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        medicalLicenseNumberTextField = new javax.swing.JTextField();
        medicalLicense = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Workspace = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        leftWelcome = new javax.swing.JLabel();
        leftAccID = new javax.swing.JLabel();
        RightComponent = new javax.swing.JPanel();
        PatientHome = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        createAppointment = new javax.swing.JButton();
        viewAppoitnmentPatient = new javax.swing.JButton();
        CreatePatientAppointment = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        PatientAppointmentDate = new javax.swing.JLabel();
        PatientAppointmentDateChooser = new com.toedter.calendar.JDateChooser();
        PatientAppointmentSubmit = new javax.swing.JButton();
        PatientAppointmentCancel = new javax.swing.JButton();
        PatientAppointmentDoctor = new javax.swing.JLabel();
        PatientAppointmentDrList = new javax.swing.JComboBox<>();
        PatientAppointmentReason = new javax.swing.JLabel();
        PatientAppointmentReasonArea = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        ViewPatientAppointment = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatienAppointmentHistory = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        BackToPatientHome = new javax.swing.JButton();
        ViewAppointmentUsername = new javax.swing.JLabel();
        ViewAppointmentWith = new javax.swing.JLabel();
        ViewAppointmentDate = new javax.swing.JLabel();
        HeartRate = new javax.swing.JLabel();
        ViewAppointmentAilment = new javax.swing.JLabel();
        BloodpressureViewAppointment = new javax.swing.JLabel();
        temperatureViewAppointment = new javax.swing.JLabel();
        respirationRateViewAppointment = new javax.swing.JLabel();
        DiagnosisViewAppointment = new javax.swing.JLabel();
        HeightViewAppointment = new javax.swing.JLabel();
        ContactInforAppointment = new javax.swing.JLabel();
        DoctorHome = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DoctorAppointment = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        AddVitalSigns = new javax.swing.JButton();
        VitalSignsPage = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        DoctorHomeBack = new javax.swing.JButton();
        AddVitalSignsToEncounter = new javax.swing.JButton();
        ClearVitalSigns = new javax.swing.JButton();
        userName = new javax.swing.JTextField();
        encounterID = new javax.swing.JTextField();
        usernameVitalSignsRecording = new javax.swing.JLabel();
        encounterIDVitalSignsRecording = new javax.swing.JLabel();
        patientAgeFieldVitalSignsRecording = new javax.swing.JTextField();
        patientAgeVitalSignsRecording = new javax.swing.JLabel();
        bloodGroupIDVitalSignsRecording = new javax.swing.JLabel();
        bloodGroupFieldVitalSignsRecording = new javax.swing.JTextField();
        heightVitalSignsRecording1 = new javax.swing.JLabel();
        bloodPressureIDVitalSignsRecording = new javax.swing.JLabel();
        temperatureVitalSignsRecording3 = new javax.swing.JLabel();
        respirationRateIDVitalSignsRecording4 = new javax.swing.JLabel();
        heightFieldVitalSignsRecording1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bloodPressureFieldVitalSignsRecording = new javax.swing.JTextField();
        respirationRateFieldVitalSignsRecording = new javax.swing.JTextField();
        temperatureFieldVitalSignsRecording4 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        diagnosisVitalSignsRecording1 = new javax.swing.JLabel();
        ailmentVitalSignsRecording2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        SystemAdminHome = new javax.swing.JPanel();
        SystemAdminHomeTitle = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        patientListForSysAdmin = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        doctorListForSysAdmin = new javax.swing.JTable();
        accountDisable = new javax.swing.JButton();
        accountDisablePat = new javax.swing.JButton();
        addNewUser = new javax.swing.JButton();
        accountEnablePat = new javax.swing.JButton();
        accountEnable = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        RegisterViaSysAdmin = new javax.swing.JPanel();
        userNameSysAdmin = new javax.swing.JLabel();
        passwordSysAdmin = new javax.swing.JLabel();
        mailIDSysAdmin = new javax.swing.JLabel();
        phoneSysAdmin = new javax.swing.JLabel();
        roleSysAdmin = new javax.swing.JLabel();
        genderSysAdmin = new javax.swing.JLabel();
        dobSysAdmin = new javax.swing.JLabel();
        mlnSysAdmin = new javax.swing.JLabel();
        unameTextSysAdmin = new javax.swing.JTextField();
        passwordFieldSysAdmin = new javax.swing.JPasswordField();
        mailTextFieldSysAdmin = new javax.swing.JTextField();
        numberTextFieldSysAdmin = new javax.swing.JTextField();
        comboBoxSysAdmin = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        dateChooserSysAdmin = new com.toedter.calendar.JDateChooser();
        mlnTextFieldSysAdmin = new javax.swing.JTextField();
        cancelSysAdmin = new javax.swing.JButton();
        registerSysAdmin = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lastNameTextFieldSysAdmin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        firstNameTextFieldSysAdmin = new javax.swing.JTextField();
        Grievences = new javax.swing.JPanel();
        MailIDGrievencesLabel = new javax.swing.JLabel();
        mailIDGrievences = new javax.swing.JTextField();
        NumberGrievencesLabel = new javax.swing.JLabel();
        NumberGrievences = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        CancelGrievences = new javax.swing.JButton();
        SubmitGrievences = new javax.swing.JButton();
        grievencesComboBox = new javax.swing.JComboBox<>();
        grievencesSysAdmin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        Parent.setLayout(new java.awt.CardLayout());

        AppLogo.setText("AppLogo");

        username.setText("Username:");

        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        password.setText("Password:");

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Register");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Issues? Contact System Admin");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
        Login.setLayout(LoginLayout);
        LoginLayout.setHorizontalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginLayout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(LoginLayout.createSequentialGroup()
                                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username)
                                    .addComponent(password))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordTextField)
                                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, LoginLayout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(LoginLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(AppLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(418, Short.MAX_VALUE))
        );
        LoginLayout.setVerticalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(AppLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(296, Short.MAX_VALUE))
        );

        Parent.add(Login, "card2");

        Register.setLayout(null);

        AppLogo1.setText("AppLogo");
        Register.add(AppLogo1);
        AppLogo1.setBounds(410, 20, 68, 66);

        username1.setText("Username:");
        Register.add(username1);
        username1.setBounds(269, 125, 83, 24);
        Register.add(usernameTextField1);
        usernameTextField1.setBounds(410, 125, 172, 24);

        password1.setText("Password:");
        Register.add(password1);
        password1.setBounds(269, 167, 83, 24);

        passwordTextField1.setText("jPasswordField1");
        Register.add(passwordTextField1);
        passwordTextField1.setBounds(410, 167, 172, 24);

        emailID.setText("Email ID:");
        Register.add(emailID);
        emailID.setBounds(269, 209, 83, 24);
        Register.add(mailIDTextField);
        mailIDTextField.setBounds(410, 209, 172, 24);

        phone.setText("Phone No. :");
        Register.add(phone);
        phone.setBounds(269, 251, 83, 24);

        phoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextFieldActionPerformed(evt);
            }
        });
        Register.add(phoneTextField);
        phoneTextField.setBounds(410, 251, 172, 24);

        role.setText("Role:");
        Register.add(role);
        role.setBounds(269, 293, 83, 24);

        rolesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor", "System Administration" }));
        rolesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesComboBoxActionPerformed(evt);
            }
        });
        Register.add(rolesComboBox);
        rolesComboBox.setBounds(410, 293, 172, 24);

        gender.setText("Gender:");
        Register.add(gender);
        gender.setBounds(269, 329, 83, 24);

        genderButtonGroup.add(maleButton);
        maleButton.setText("Male");
        maleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButtonActionPerformed(evt);
            }
        });
        Register.add(maleButton);
        maleButton.setBounds(410, 330, 53, 22);

        genderButtonGroup.add(femaleButton);
        femaleButton.setText("Female");
        femaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleButtonActionPerformed(evt);
            }
        });
        Register.add(femaleButton);
        femaleButton.setBounds(481, 330, 72, 22);

        genderButtonGroup.add(othersButton);
        othersButton.setText("Others");
        othersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersButtonActionPerformed(evt);
            }
        });
        Register.add(othersButton);
        othersButton.setBounds(571, 330, 68, 22);

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        Register.add(jDateChooser1);
        jDateChooser1.setBounds(410, 365, 168, 24);

        DOB.setText("Date of birth:");
        Register.add(DOB);
        DOB.setBounds(269, 365, 83, 24);

        register.setText("Register");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        Register.add(register);
        register.setBounds(269, 536, 85, 24);

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Register.add(jButton3);
        jButton3.setBounds(560, 530, 76, 24);
        Register.add(medicalLicenseNumberTextField);
        medicalLicenseNumberTextField.setBounds(410, 407, 168, 24);

        medicalLicense.setText("Medical license No.:");
        Register.add(medicalLicense);
        medicalLicense.setBounds(269, 407, 129, 24);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon("/home/tarush/Downloads/Background.png")); // NOI18N
        Register.add(jLabel10);
        jLabel10.setBounds(190, 10, 500, 560);

        Parent.add(Register, "card3");

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(3);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jButton5.setText("Log out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        leftWelcome.setForeground(new java.awt.Color(255, 255, 255));
        leftWelcome.setText("Welcome:");

        leftAccID.setForeground(new java.awt.Color(255, 255, 255));
        leftAccID.setText("Acc. ID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftAccID)
                    .addComponent(leftWelcome))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(leftWelcome)
                .addGap(28, 28, 28)
                .addComponent(leftAccID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 309, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(43, 43, 43))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        RightComponent.setBackground(new java.awt.Color(255, 255, 255));
        RightComponent.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel1.setText("Welcome Patient");

        createAppointment.setText("Create Appointment");
        createAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAppointmentActionPerformed(evt);
            }
        });

        viewAppoitnmentPatient.setText("View Appointments");
        viewAppoitnmentPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppoitnmentPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientHomeLayout = new javax.swing.GroupLayout(PatientHome);
        PatientHome.setLayout(PatientHomeLayout);
        PatientHomeLayout.setHorizontalGroup(
            PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientHomeLayout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addGroup(PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(viewAppoitnmentPatient, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createAppointment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(388, Short.MAX_VALUE))
        );
        PatientHomeLayout.setVerticalGroup(
            PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createAppointment)
                .addGap(26, 26, 26)
                .addComponent(viewAppoitnmentPatient)
                .addContainerGap(439, Short.MAX_VALUE))
        );

        RightComponent.add(PatientHome, "card2");

        CreatePatientAppointment.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N
        jLabel2.setText("Create appointment");

        PatientAppointmentDate.setText("Date of appointment:");

        PatientAppointmentSubmit.setBackground(new java.awt.Color(51, 153, 255));
        PatientAppointmentSubmit.setText("Submit");
        PatientAppointmentSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientAppointmentSubmitActionPerformed(evt);
            }
        });

        PatientAppointmentCancel.setBackground(new java.awt.Color(255, 51, 51));
        PatientAppointmentCancel.setText("Cancel");
        PatientAppointmentCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientAppointmentCancelActionPerformed(evt);
            }
        });

        PatientAppointmentDoctor.setText("Appointment with:");

        PatientAppointmentDrList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Selected" }));

        PatientAppointmentReason.setText("Ailment:");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        PatientAppointmentReasonArea.setViewportView(jTextArea2);

        javax.swing.GroupLayout CreatePatientAppointmentLayout = new javax.swing.GroupLayout(CreatePatientAppointment);
        CreatePatientAppointment.setLayout(CreatePatientAppointmentLayout);
        CreatePatientAppointmentLayout.setHorizontalGroup(
            CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PatientAppointmentDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientAppointmentReason, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PatientAppointmentDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PatientAppointmentDrList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PatientAppointmentReasonArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreatePatientAppointmentLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PatientAppointmentCancel)
                .addGap(18, 18, 18)
                .addComponent(PatientAppointmentSubmit)
                .addGap(27, 27, 27))
        );
        CreatePatientAppointmentLayout.setVerticalGroup(
            CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PatientAppointmentDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PatientAppointmentDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientAppointmentDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PatientAppointmentDrList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addComponent(PatientAppointmentReason, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(330, 330, 330))
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addComponent(PatientAppointmentReasonArea, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientAppointmentSubmit)
                            .addComponent(PatientAppointmentCancel))
                        .addGap(58, 58, 58))))
        );

        RightComponent.add(CreatePatientAppointment, "card3");

        PatienAppointmentHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encounter ID", "Dr. Information", "Appointment date", "Ailment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PatienAppointmentHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PatienAppointmentHistoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(PatienAppointmentHistory);
        if (PatienAppointmentHistory.getColumnModel().getColumnCount() > 0) {
            PatienAppointmentHistory.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N
        jLabel3.setText("View Appointments");

        BackToPatientHome.setText("Back");
        BackToPatientHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToPatientHomeActionPerformed(evt);
            }
        });

        ViewAppointmentUsername.setText("Username:");

        ViewAppointmentWith.setText("Appointment with:");

        ViewAppointmentDate.setText("Date:");

        HeartRate.setText("Heart Rate:");

        ViewAppointmentAilment.setText("Ailment:");

        BloodpressureViewAppointment.setText("Blood Pressure:");

        temperatureViewAppointment.setText("Temperature:");

        respirationRateViewAppointment.setText("Respiration Rate:");

        DiagnosisViewAppointment.setText("Diagnosis:");

        HeightViewAppointment.setText("Height:");

        ContactInforAppointment.setText("Contact Info:");

        javax.swing.GroupLayout ViewPatientAppointmentLayout = new javax.swing.GroupLayout(ViewPatientAppointment);
        ViewPatientAppointment.setLayout(ViewPatientAppointmentLayout);
        ViewPatientAppointmentLayout.setHorizontalGroup(
            ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
            .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewPatientAppointmentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BackToPatientHome))
                    .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                        .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                                .addGap(194, 194, 194)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ViewAppointmentUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ViewAppointmentDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ViewAppointmentWith, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ContactInforAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(ViewAppointmentAilment, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DiagnosisViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                                .addComponent(HeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BloodpressureViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(temperatureViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(respirationRateViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HeightViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ViewPatientAppointmentLayout.setVerticalGroup(
            ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewPatientAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ViewAppointmentUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewAppointmentWith)
                    .addComponent(ContactInforAppointment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewAppointmentDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HeartRate)
                    .addComponent(BloodpressureViewAppointment)
                    .addComponent(temperatureViewAppointment)
                    .addComponent(respirationRateViewAppointment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(HeightViewAppointment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ViewAppointmentAilment)
                .addGap(12, 12, 12)
                .addComponent(DiagnosisViewAppointment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BackToPatientHome)
                .addGap(12, 12, 12))
        );

        RightComponent.add(ViewPatientAppointment, "card4");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel4.setText("Welcome Doctor");

        DoctorAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "Patient ID", "Patient Name", "Appointment date", "Ailment"
            }
        ));
        jScrollPane3.setViewportView(DoctorAppointment);

        jLabel5.setText("Appointments list");

        AddVitalSigns.setText("Add Vital Signs");
        AddVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddVitalSignsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorHomeLayout = new javax.swing.GroupLayout(DoctorHome);
        DoctorHome.setLayout(DoctorHomeLayout);
        DoctorHomeLayout.setHorizontalGroup(
            DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorHomeLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(DoctorHomeLayout.createSequentialGroup()
                .addGroup(DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                    .addGroup(DoctorHomeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DoctorHomeLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorHomeLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(AddVitalSigns)))))
                .addContainerGap())
        );
        DoctorHomeLayout.setVerticalGroup(
            DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorHomeLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddVitalSigns)
                .addGap(19, 19, 19))
        );

        RightComponent.add(DoctorHome, "card5");

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel7.setText("Vital Signs Recording");

        DoctorHomeBack.setText("Back");
        DoctorHomeBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorHomeBackActionPerformed(evt);
            }
        });

        AddVitalSignsToEncounter.setText("Add Vital Signs");
        AddVitalSignsToEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddVitalSignsToEncounterActionPerformed(evt);
            }
        });

        ClearVitalSigns.setText("Clear");

        usernameVitalSignsRecording.setText("Username:");

        encounterIDVitalSignsRecording.setText("Encounter ID:");

        patientAgeVitalSignsRecording.setText("Age:");

        bloodGroupIDVitalSignsRecording.setText("Blood group:");

        heightVitalSignsRecording1.setText("Height:");

        bloodPressureIDVitalSignsRecording.setText("Blood pressure:");

        temperatureVitalSignsRecording3.setText("Temperature:");

        respirationRateIDVitalSignsRecording4.setText("Respiration rate:");

        jLabel9.setText("cm");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        diagnosisVitalSignsRecording1.setText("Diagnosis:");

        ailmentVitalSignsRecording2.setText("Ailment:");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane6.setViewportView(jTextArea4);

        javax.swing.GroupLayout VitalSignsPageLayout = new javax.swing.GroupLayout(VitalSignsPage);
        VitalSignsPage.setLayout(VitalSignsPageLayout);
        VitalSignsPageLayout.setHorizontalGroup(
            VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VitalSignsPageLayout.createSequentialGroup()
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(encounterIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(encounterID, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(respirationRateIDVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(bloodGroupIDVitalSignsRecording)
                                                    .addComponent(patientAgeVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(bloodGroupFieldVitalSignsRecording, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(patientAgeFieldVitalSignsRecording, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                                .addComponent(temperatureVitalSignsRecording3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(temperatureFieldVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(27, 27, 27))
                                    .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34))))
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ClearVitalSigns)))
                        .addGap(18, 18, 18)
                        .addComponent(AddVitalSignsToEncounter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DoctorHomeBack)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VitalSignsPageLayout.createSequentialGroup()
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(bloodPressureIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bloodPressureFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(heightVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(heightFieldVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(respirationRateFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))
                    .addGroup(VitalSignsPageLayout.createSequentialGroup()
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(diagnosisVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(ailmentVitalSignsRecording2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        VitalSignsPageLayout.setVerticalGroup(
            VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientAgeFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientAgeVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encounterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encounterIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodGroupIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodGroupFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temperatureVitalSignsRecording3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(heightVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(heightFieldVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(temperatureFieldVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respirationRateIDVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodPressureFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respirationRateFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ailmentVitalSignsRecording2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagnosisVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoctorHomeBack)
                    .addComponent(AddVitalSignsToEncounter)
                    .addComponent(ClearVitalSigns))
                .addGap(37, 37, 37))
        );

        RightComponent.add(VitalSignsPage, "card7");

        SystemAdminHomeTitle.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        SystemAdminHomeTitle.setText("Welcome System Administrator");

        patientListForSysAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Patient Name", "Patient Gender", "Patient Mail ID", "Patietn Contact Number", "Account Status"
            }
        ));
        jScrollPane7.setViewportView(patientListForSysAdmin);

        doctorListForSysAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Doctor Name", "Doctor Mail ID", "Doctor Contact Number", "Account Status"
            }
        ));
        doctorListForSysAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doctorListForSysAdminMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(doctorListForSysAdmin);

        accountDisable.setText("Disable Doctor Account");
        accountDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountDisableActionPerformed(evt);
            }
        });

        accountDisablePat.setText("Disable Patient Account");
        accountDisablePat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountDisablePatActionPerformed(evt);
            }
        });

        addNewUser.setText("Add User");
        addNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewUserActionPerformed(evt);
            }
        });

        accountEnablePat.setText("Enable Patient Account");
        accountEnablePat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountEnablePatActionPerformed(evt);
            }
        });

        accountEnable.setText("Enable Doctor Account");
        accountEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountEnableActionPerformed(evt);
            }
        });

        jButton6.setText("View Grievences");

        javax.swing.GroupLayout SystemAdminHomeLayout = new javax.swing.GroupLayout(SystemAdminHome);
        SystemAdminHome.setLayout(SystemAdminHomeLayout);
        SystemAdminHomeLayout.setHorizontalGroup(
            SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                                .addComponent(accountEnable)
                                .addGap(18, 18, 18)
                                .addComponent(accountDisable))
                            .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                                    .addComponent(jButton6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addNewUser)))
                            .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                                .addComponent(accountEnablePat)
                                .addGap(18, 18, 18)
                                .addComponent(accountDisablePat))))
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(SystemAdminHomeTitle)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SystemAdminHomeLayout.setVerticalGroup(
            SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(SystemAdminHomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewUser)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountDisablePat)
                    .addComponent(accountEnablePat))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountDisable)
                    .addComponent(accountEnable))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        RightComponent.add(SystemAdminHome, "card8");

        userNameSysAdmin.setText("Username:");

        passwordSysAdmin.setText("Password:");

        mailIDSysAdmin.setText("Email ID:");

        phoneSysAdmin.setText("Phone No.:");

        roleSysAdmin.setText("Role:");

        genderSysAdmin.setText("Gender:");
        genderSysAdmin.setToolTipText("");

        dobSysAdmin.setText("Date of birth:");

        mlnSysAdmin.setText("Medical license No.:");

        comboBoxSysAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor" }));

        genderButtonGroup.add(jRadioButton1);
        jRadioButton1.setText("Male");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        genderButtonGroup.add(jRadioButton2);
        jRadioButton2.setText("Female");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        genderButtonGroup.add(jRadioButton3);
        jRadioButton3.setText("Others");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        cancelSysAdmin.setText("Cancel");
        cancelSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSysAdminActionPerformed(evt);
            }
        });

        registerSysAdmin.setText("Register");
        registerSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerSysAdminActionPerformed(evt);
            }
        });

        jLabel6.setText("First Name:");

        jLabel8.setText("Last Name:");

        firstNameTextFieldSysAdmin.setToolTipText("");
        firstNameTextFieldSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldSysAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RegisterViaSysAdminLayout = new javax.swing.GroupLayout(RegisterViaSysAdmin);
        RegisterViaSysAdmin.setLayout(RegisterViaSysAdminLayout);
        RegisterViaSysAdminLayout.setHorizontalGroup(
            RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dobSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mlnSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(genderSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roleSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(phoneSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mailIDSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userNameSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton3))
                            .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(mlnTextFieldSysAdmin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dateChooserSysAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                                    .addComponent(registerSysAdmin)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cancelSysAdmin)))
                            .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(unameTextSysAdmin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(passwordFieldSysAdmin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mailTextFieldSysAdmin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(numberTextFieldSysAdmin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboBoxSysAdmin, javax.swing.GroupLayout.Alignment.LEADING, 0, 164, Short.MAX_VALUE))))
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(firstNameTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(lastNameTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        RegisterViaSysAdminLayout.setVerticalGroup(
            RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(lastNameTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(firstNameTextFieldSysAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameSysAdmin)
                            .addComponent(unameTextSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordSysAdmin)
                            .addComponent(passwordFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mailIDSysAdmin)
                            .addComponent(mailTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneSysAdmin)
                            .addComponent(numberTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roleSysAdmin)
                            .addComponent(comboBoxSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderSysAdmin)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3))
                        .addGap(18, 18, 18)
                        .addComponent(dobSysAdmin))
                    .addComponent(dateChooserSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mlnSysAdmin)
                    .addComponent(mlnTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelSysAdmin)
                    .addComponent(registerSysAdmin))
                .addGap(19, 19, 19))
        );

        RightComponent.add(RegisterViaSysAdmin, "card9");

        jSplitPane1.setRightComponent(RightComponent);

        javax.swing.GroupLayout WorkspaceLayout = new javax.swing.GroupLayout(Workspace);
        Workspace.setLayout(WorkspaceLayout);
        WorkspaceLayout.setHorizontalGroup(
            WorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE)
        );
        WorkspaceLayout.setVerticalGroup(
            WorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        Parent.add(Workspace, "card5");

        MailIDGrievencesLabel.setText("Mail ID:");

        NumberGrievencesLabel.setText("Number:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        CancelGrievences.setText("Cancel");
        CancelGrievences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelGrievencesActionPerformed(evt);
            }
        });

        SubmitGrievences.setText("Submit");
        SubmitGrievences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitGrievencesActionPerformed(evt);
            }
        });

        grievencesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Different", "Unable to login", "Unable to make account" }));

        grievencesSysAdmin.setText("Grievence:");

        javax.swing.GroupLayout GrievencesLayout = new javax.swing.GroupLayout(Grievences);
        Grievences.setLayout(GrievencesLayout);
        GrievencesLayout.setHorizontalGroup(
            GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GrievencesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(CancelGrievences)
                .addGap(28, 28, 28)
                .addComponent(SubmitGrievences)
                .addGap(92, 92, 92))
            .addGroup(GrievencesLayout.createSequentialGroup()
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GrievencesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(NumberGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MailIDGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(grievencesSysAdmin))
                        .addGap(18, 18, 18)
                        .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mailIDGrievences)
                            .addComponent(NumberGrievences)
                            .addComponent(grievencesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(GrievencesLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        GrievencesLayout.setVerticalGroup(
            GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GrievencesLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mailIDGrievences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MailIDGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberGrievences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grievencesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grievencesSysAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelGrievences)
                    .addComponent(SubmitGrievences))
                .addGap(39, 39, 39))
        );

        Parent.add(Grievences, "card5");

        getContentPane().add(Parent, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rolesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesComboBoxActionPerformed
        if (rolesComboBox.getSelectedIndex() == 1){
            medicalLicenseNumberTextField.setEnabled(true);
        }else{
            medicalLicenseNumberTextField.setEnabled(false);
        }
    }//GEN-LAST:event_rolesComboBoxActionPerformed

    public String encIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String encID = "ENC-"+idInt;
        return encID;
    }
    
    public String patIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String encID = "PAT-"+idInt;
        return encID;
    }
    
    public String sysAdminIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String sysAdminID = "SAM-"+idInt;
        return sysAdminID;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PanelPaint(Register);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        /*if (ValidationSysAdmin() != null){
            SplitPanelPaint(SystemAdminHome);
        }else if(ValidationSysAdmin() == null){
        PanelPaint(Login);
        }*/
        PanelPaint(Login);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed
    
    public void registerationProcessSysAdmin(){
        if (comboBoxSysAdmin.getSelectedItem().toString().equals("Doctor")){
            DoctorPerson doc = docDir.addDcotorPerson();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            doc.setName(name);
            doc.setUsername(unameTextSysAdmin.getText());
            doc.setPassword(String.valueOf(passwordFieldSysAdmin.getPassword()));
            doc.setMail(mailIDSysAdmin.getText());
            doc.setRole(comboBoxSysAdmin.getSelectedItem().toString());
            doc.setDateOfBirth(dateChooserSysAdmin.getDate());
            doc.setPhone(Integer.parseInt(numberTextFieldSysAdmin.getText()));
            doc.setGender(genderString);
            doc.setMdeicalLicenseNumber(mlnTextFieldSysAdmin.getText());
            System.out.println(docDir.getDoctorDir().size());
            PatientAppointmentDrList.addItem(doc.getUsername());
            sysAdminDocList();
            
        }else if(comboBoxSysAdmin.getSelectedItem().toString().equals("Patient")){
            Patient person = dir.addPerson();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            person.setName(name);
            person.setUsername(unameTextSysAdmin.getText());
            person.setPassword(String.valueOf(passwordFieldSysAdmin.getPassword()));
            person.setMail(mailTextFieldSysAdmin.getText());
            person.setRole(comboBoxSysAdmin.getSelectedItem().toString());
            person.setDateOfBirth(dateChooserSysAdmin.getDate());
            person.setPhone(Integer.parseInt(numberTextFieldSysAdmin.getText()));
            person.setGender(genderString);
            person.setUniqueID(patIDGen());
            sysAdminPatientList();
        }
        
    }
    
    
    public void registerationProcess(){
    if (rolesComboBox.getSelectedItem().toString().equals("Doctor")){
            DoctorPerson doc = docDir.addDcotorPerson();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            doc.setName(name);
            doc.setUsername(usernameTextField1.getText());
            doc.setPassword(String.valueOf(passwordTextField1.getPassword()));
            doc.setMail(mailIDTextField.getText());
            doc.setRole(rolesComboBox.getSelectedItem().toString());
            doc.setDateOfBirth(jDateChooser1.getDate());
            doc.setPhone(Integer.parseInt(phoneTextField.getText()));
            doc.setGender(genderString);
            doc.setMdeicalLicenseNumber(medicalLicenseNumberTextField.getText());
            System.out.println(docDir.getDoctorDir().size());
            PatientAppointmentDrList.addItem(doc.getUsername() +" " +"(" + doc.getPhone() + ", " + doc.getMail() + ")");
            sysAdminDocList();
            
        }else if(rolesComboBox.getSelectedItem().toString().equals("Patient")){
            Patient person = dir.addPerson();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            person.setName(name);
            person.setUsername(usernameTextField1.getText());
            person.setPassword(String.valueOf(passwordTextField1.getPassword()));
            person.setMail(mailIDTextField.getText());
            person.setRole(rolesComboBox.getSelectedItem().toString());
            person.setDateOfBirth(jDateChooser1.getDate());
            person.setPhone(Integer.parseInt(phoneTextField.getText()));
            person.setGender(genderString);
            person.setUniqueID(patIDGen());
            sysAdminPatientList();
            
        }else if(rolesComboBox.getSelectedItem().toString().equals("System Administration")){
            SystemAdmin admin = sysAdminDir.addSystemAdmin();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            admin.setName(name);
            admin.setUsername(usernameTextField1.getText());
            admin.setPassword(String.valueOf(passwordTextField1.getPassword()));
            admin.setMail(mailIDTextField.getText());
            admin.setRole(rolesComboBox.getSelectedItem().toString());
            admin.setDateOfBirth(jDateChooser1.getDate());
            admin.setGender(genderString);
            admin.setPhone(Integer.parseInt(phoneTextField.getText()));
            admin.setAdminID(patIDGen());            
        }
    }
    
    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        /*if (ValidationDoctor() == null || ValidationPerson() == null || ValidationSysAdmin() == null){
        registerationProcess();
        PanelPaint(Login);
        }else{
         JOptionPane.showMessageDialog(this, "Sorry but the given username is already taken.");
        }*/
        registerationProcess();
        PanelPaint(Login);        
    }//GEN-LAST:event_registerActionPerformed

    private void maleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButtonActionPerformed
        genderString = "Male";
    }//GEN-LAST:event_maleButtonActionPerformed

    private void femaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleButtonActionPerformed
        genderString = "Female";
    }//GEN-LAST:event_femaleButtonActionPerformed

    private void othersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_othersButtonActionPerformed
        genderString = "Others";
    }//GEN-LAST:event_othersButtonActionPerformed

    private void phoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextFieldActionPerformed
        
    }//GEN-LAST:event_phoneTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Patient data = ValidationPerson();
        DoctorPerson dataDoc = ValidationDoctor();
        SystemAdmin sysAdmin = ValidationSysAdmin();
        if (data != null || dataDoc != null || sysAdmin != null){
            if (data.getRole() == "Patient"){
                leftWelcome.setText("Welcome: "+ data.getUsername());
                leftAccID.setText("Acc. ID: "+data.getUniqueID());
                PanelPaint(Workspace);
                SplitPanelPaint(PatientHome);
                
            }else if(dataDoc.getRole() == "Doctor"){
                leftWelcome.setText("Welcome: "+ dataDoc.getUsername());
                leftAccID.setText("Acc. ID: "+dataDoc.getMdeicalLicenseNumber());
                PanelPaint(Workspace);
                SplitPanelPaint(DoctorHome);
                doctorAppointmentsList(dataDoc.getUsername());
                
            }else if(sysAdmin.getRole() == "System Administration"){
                leftWelcome.setText("Welcome: "+ sysAdmin.getUsername());
                leftAccID.setText("Acc. ID: "+sysAdmin.getAdminID());
                PanelPaint(Workspace);
                SplitPanelPaint(SystemAdminHome);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid username and password.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void sysAdminPatientList(){
        DefaultTableModel sysAdminPatList = (DefaultTableModel) patientListForSysAdmin.getModel();
        sysAdminPatList.setRowCount(0);
        for (Patient pat: dir.getDir()){
          
            String saPat[] = {pat.getUniqueID(), pat.getUsername(), pat.getGender(), pat.getMail(), String.valueOf(pat.getPhone()), pat.getAccountStatus()};
            sysAdminPatList.addRow(saPat);
        }
    }
    
    public void sysAdminDocList(){
        DefaultTableModel sysAdminDocList = (DefaultTableModel)doctorListForSysAdmin.getModel();
        sysAdminDocList.setRowCount(0);
        for (DoctorPerson dp:docDir.getDoctorDir()){
            String saDoc[] = {dp.getMdeicalLicenseNumber(), dp.getUsername(), dp.getMail(), String.valueOf(dp.getPhone()), dp.getAccountStatus()};
            sysAdminDocList.addRow(saDoc);
        }
    }
    
    public void doctorAppointmentsList(String name){
        DefaultTableModel doctorTable = (DefaultTableModel)DoctorAppointment.getModel();
        doctorTable.setRowCount(0);
        for (Encounter enc : encHistory.getEncounterHistory()){
            if(enc.getEncounterWith().equals(name)){
                String docTableIn[] = {enc.getEncounterID(), enc.getUniqueID(),enc.getUsername(), enc.getEncounterDate(), enc.getAilment()};                
                doctorTable.addRow(docTableIn);
            }
        }
    }
    
    public void patientAppointmentsList(String name){
        DefaultTableModel patientTable = (DefaultTableModel) PatienAppointmentHistory.getModel();
        patientTable.setRowCount(0);
        for (Encounter enc : encHistory.getEncounterHistory()){
            if (enc.getUsername().equals(name)){
                String dataIn[] = {enc.getEncounterWith(), enc.getEncounterDate(), enc.getAilment()};
                patientTable.addRow(dataIn);
            }
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PanelPaint(Grievences);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        PanelPaint(Login);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void CancelGrievencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelGrievencesActionPerformed
        PanelPaint(Login);
    }//GEN-LAST:event_CancelGrievencesActionPerformed

    private void createAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAppointmentActionPerformed
        SplitPanelPaint(CreatePatientAppointment);
    }//GEN-LAST:event_createAppointmentActionPerformed

    private void PatientAppointmentCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientAppointmentCancelActionPerformed
        SplitPanelPaint(PatientHome);
    }//GEN-LAST:event_PatientAppointmentCancelActionPerformed

    private void PatientAppointmentSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientAppointmentSubmitActionPerformed
        SplitPanelPaint(PatientHome);
        //Here we will add methods to add data to storage.
        Encounter enc = encHistory.addEncounterHistory();
        enc.setUsername(ValidationPerson().getUsername());
        enc.setGender(ValidationPerson().getGender());
        enc.setHeartRate(0);
        enc.setMail(ValidationPerson().getMail());
        enc.setPhone(ValidationPerson().getPhone());
        enc.setRespirationRate(0);
        enc.setBodyTemperatur(0);
        enc.setBloodPressure(0);
        enc.setHeight(0);
        enc.setRole(ValidationPerson().getRole());
        enc.setAilment(jTextArea2.getText());
        enc.setEncounterDate(PatientAppointmentDateChooser.getDate().toString());
        enc.setEncounterWith(PatientAppointmentDrList.getSelectedItem().toString());
        enc.setEncounterID(encIDGen());
        enc.setUniqueID(ValidationPerson().getUniqueID());
        //DefaultTableModel patientTable = (DefaultTableModel) PatienAppointmentHistory.getModel();
        //String dataIn[] = {enc.getEncounterWith(), enc.getEncounterDate(), enc.getAilment()};
        //patientTable.addRow(dataIn);
        
    }//GEN-LAST:event_PatientAppointmentSubmitActionPerformed

    private void BackToPatientHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToPatientHomeActionPerformed
        SplitPanelPaint(PatientHome);
        ViewAppointmentUsername.setText("Username: ");
        ViewAppointmentWith.setText("Appointment with: ");
        ViewAppointmentDate.setText("Appointment date: ");
        HeartRate.setText("Heart rate: ");
    }//GEN-LAST:event_BackToPatientHomeActionPerformed

    private void viewAppoitnmentPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppoitnmentPatientActionPerformed
        SplitPanelPaint(ViewPatientAppointment);
        DefaultTableModel patientTable = (DefaultTableModel) PatienAppointmentHistory.getModel();
        patientTable.setRowCount(0);
        for (Encounter enc : encHistory.getEncounterHistory()){
            if (enc.getUsername().equals(ValidationPerson().getUsername())){
                String dataIn[] = {enc.getEncounterID(), enc.getEncounterWith(), enc.getEncounterDate(), enc.getAilment()};
                patientTable.addRow(dataIn);
            }
        }
    }//GEN-LAST:event_viewAppoitnmentPatientActionPerformed

    private void AddVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddVitalSignsActionPerformed
        SplitPanelPaint(VitalSignsPage);
        //Encounter enc = new Encounter();
        int row = DoctorAppointment.getSelectedRow();
        if (row != -1 ){
            String ID = DoctorAppointment.getValueAt(row, 0).toString();
            for (Encounter e:encHistory.getEncounterHistory()){
                if (e.getEncounterID().equals(ID)){
                    encToWorkWith = e;
                }
            }
            userName.setText(encToWorkWith.getUsername());
            bloodGroupFieldVitalSignsRecording.setText("A+");
            encounterID.setText(encToWorkWith.getEncounterID());
            
            //need to add age as well
            jTextArea4.setText(encToWorkWith.getAilment());
        }
    }//GEN-LAST:event_AddVitalSignsActionPerformed

    private void DoctorHomeBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorHomeBackActionPerformed
        SplitPanelPaint(DoctorHome);
    }//GEN-LAST:event_DoctorHomeBackActionPerformed

    private void PatienAppointmentHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PatienAppointmentHistoryMouseClicked
        int row = PatienAppointmentHistory.getSelectedRow();
        //Need to use Encounter ID to show the right data population.
        String id = PatienAppointmentHistory.getValueAt(row, 0).toString();
        Encounter enc = encHistory.getEncounterHistory().get(row);
        ViewAppointmentUsername.setText("Username: "+enc.getUsername());
        ViewAppointmentWith.setText("Appointment with: "+enc.getEncounterWith());
        ViewAppointmentDate.setText("Appointment date: "+enc.getEncounterDate());
        HeartRate.setText("Heart rate: "+enc.getHeartRate());
        BloodpressureViewAppointment.setText("Blood Pressure: "+enc.getBloodPressure());
        temperatureViewAppointment.setText("Temperature: "+enc.getBodyTemperatur());
        respirationRateViewAppointment.setText("Respiration Rate: "+enc.getRespirationRate());
        HeightViewAppointment.setText("Height: "+enc.getHeight() + "cm.");
        DiagnosisViewAppointment.setText("Diagnosis: "+enc.getDiagnosis());
        ViewAppointmentAilment.setText("Ailment: "+enc.getAilment()+" "+enc.getRole());
        //ContactInforAppointment.setText("Contact Info: "+enc.getMail() + " "+ enc.getPhone()); //Need to add ability to get the right phone number and mail ID as well.
        ContactInforAppointment.setText("");
    }//GEN-LAST:event_PatienAppointmentHistoryMouseClicked

    private void AddVitalSignsToEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddVitalSignsToEncounterActionPerformed
        //int indexedVal = encHistory.getEncounterHistory().indexOf(encounterID.getText());
        //Encounter enc = encHistory.getEncounterHistory().get(indexedVal);
        System.out.println(encToWorkWith.getEncounterID());
        encToWorkWith.setBloodPressure(Integer.parseInt(bloodPressureFieldVitalSignsRecording.getText()));
        encToWorkWith.setHeight(Integer.parseInt(heightFieldVitalSignsRecording1.getText()));
        encToWorkWith.setBloodPressure(Integer.parseInt(bloodPressureFieldVitalSignsRecording.getText()));
        encToWorkWith.setRespirationRate(Integer.parseInt(respirationRateFieldVitalSignsRecording.getText()));
        encToWorkWith.setDiagnosis(jTextArea3.getText());
    }//GEN-LAST:event_AddVitalSignsToEncounterActionPerformed

    private void doctorListForSysAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doctorListForSysAdminMouseClicked

    }//GEN-LAST:event_doctorListForSysAdminMouseClicked

    private void accountDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountDisableActionPerformed
        int row = doctorListForSysAdmin.getSelectedRow();
        DoctorPerson dpToDisable = new DoctorPerson();
        if (row != -1){
            String ID = doctorListForSysAdmin.getValueAt(row, 0).toString();
            for (DoctorPerson doc : docDir.getDoctorDir()){
                if (doc.getMdeicalLicenseNumber().toString().equals(ID)){
                    dpToDisable = doc;               
                }              
            }
        dpToDisable.setAccountStatus("Disable");
        JOptionPane.showMessageDialog(this, "The doctor account has been disabled.");
        sysAdminDocList();
        PatientAppointmentDrList.removeItem(dpToDisable.getUsername());
        }else{
        JOptionPane.showMessageDialog(this, "Please select a doctor account to disable");
        }
    }//GEN-LAST:event_accountDisableActionPerformed

    private void accountDisablePatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountDisablePatActionPerformed
        int row = patientListForSysAdmin.getSelectedRow();
        Patient patToDisable = new Patient();
        if(row != -1){
            String IDPat = patientListForSysAdmin.getValueAt(row, 0).toString();
            for (Patient pat:dir.getDir()){
                if (pat.getUniqueID().toString().equals(IDPat)){
                    patToDisable = pat;                
                }
            }
        patToDisable.setAccountStatus("Disable");
        sysAdminPatientList();
        JOptionPane.showMessageDialog(this, "The patient account has been disabled.");
        }else{
        JOptionPane.showMessageDialog(this, "Please select a patient account to disable");
        }
    }//GEN-LAST:event_accountDisablePatActionPerformed

    private void addNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewUserActionPerformed
        SplitPanelPaint(RegisterViaSysAdmin);
    }//GEN-LAST:event_addNewUserActionPerformed

    private void accountEnablePatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountEnablePatActionPerformed
        int row = patientListForSysAdmin.getSelectedRow();
        Patient patToDisable = new Patient();
        if(row != -1){
            String IDPat = patientListForSysAdmin.getValueAt(row, 0).toString();
            for (Patient pat:dir.getDir()){
                if (pat.getUniqueID().toString().equals(IDPat)){
                    patToDisable = pat;                
                }
            }
        patToDisable.setAccountStatus("Active");
        sysAdminPatientList();
        JOptionPane.showMessageDialog(this, "The patient account has been enabled.");
        }else{
        JOptionPane.showMessageDialog(this, "Please select a patient account to enable");
        }
        
    }//GEN-LAST:event_accountEnablePatActionPerformed

    private void accountEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountEnableActionPerformed
        int row = doctorListForSysAdmin.getSelectedRow();
        DoctorPerson dpToDisable = new DoctorPerson();
        if (row != -1){
            String ID = doctorListForSysAdmin.getValueAt(row, 0).toString();
            for (DoctorPerson doc : docDir.getDoctorDir()){
                if (doc.getMdeicalLicenseNumber().toString().equals(ID)){
                    dpToDisable = doc;               
                }              
            }
        dpToDisable.setAccountStatus("Active");
        JOptionPane.showMessageDialog(this, "The doctor account has been disabled.");
        sysAdminDocList();
        PatientAppointmentDrList.addItem(dpToDisable.getUsername());
        }else{
        JOptionPane.showMessageDialog(this, "Please select a doctor account to enable");
        }
    }//GEN-LAST:event_accountEnableActionPerformed

    private void SubmitGrievencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitGrievencesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubmitGrievencesActionPerformed

    private void registerSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerSysAdminActionPerformed
        registerationProcessSysAdmin();
        SplitPanelPaint(SystemAdminHome);
    }//GEN-LAST:event_registerSysAdminActionPerformed

    private void cancelSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSysAdminActionPerformed
        SplitPanelPaint(SystemAdminHome);
    }//GEN-LAST:event_cancelSysAdminActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        genderString = "Male";
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        genderString = "Female";
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        genderString = "Others";
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void firstNameTextFieldSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldSysAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldSysAdminActionPerformed
    
    public Patient ValidationPerson(){
        Patient specificP = new Patient();
        for (Patient p: dir.getDir()){
            if (p.getUsername().equals(usernameTextField.getText()) && p.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
                if (p.getAccountStatus().toString().equals("Active")){
                System.out.println(p.getUsername());
                specificP = p;
                }else{
                    JOptionPane.showMessageDialog(this, "Sorry but your account has been disabled. Please contact the System Admin for corrections.");
                }
            }
        }return specificP;
    }
    
    public DoctorPerson ValidationDoctor(){
        DoctorPerson doc = new DoctorPerson();
        for (DoctorPerson dr: docDir.getDoctorDir()){
            if (dr.getUsername().equals(usernameTextField.getText()) && dr.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
                if (dr.getAccountStatus().toString().equals("Active")){
                System.out.println(dr.getUsername()+ dr.getRole()+ dr.getAccountStatus());
                doc = dr;
                }else{
                  JOptionPane.showMessageDialog(this, "Sorry but your account has been disabled. Please contact the System Admin for corrections.");
                }
            }
            
    }return doc;
    }
    
    public SystemAdmin ValidationSysAdmin() {
        SystemAdmin sysAD = new SystemAdmin();
        for (SystemAdmin adm: sysAdminDir.getAdminDirectory()){
            if(adm.getUsername().equals(usernameTextField.getText()) && adm.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
                if(adm.getAccountStatus().toString().equals("Active")){
                sysAD = adm;
                }else{
                    JOptionPane.showMessageDialog(this, "Sorry but your account has been disabled. Please contact the System Admin for corrections.");
                }
            }
        }return sysAD;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hospitalManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddVitalSigns;
    private javax.swing.JButton AddVitalSignsToEncounter;
    private javax.swing.JLabel AppLogo;
    private javax.swing.JLabel AppLogo1;
    private javax.swing.JButton BackToPatientHome;
    private javax.swing.JLabel BloodpressureViewAppointment;
    private javax.swing.JButton CancelGrievences;
    private javax.swing.JButton ClearVitalSigns;
    private javax.swing.JLabel ContactInforAppointment;
    private javax.swing.JPanel CreatePatientAppointment;
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DiagnosisViewAppointment;
    private javax.swing.JTable DoctorAppointment;
    private javax.swing.JPanel DoctorHome;
    private javax.swing.JButton DoctorHomeBack;
    private javax.swing.JPanel Grievences;
    private javax.swing.JLabel HeartRate;
    private javax.swing.JLabel HeightViewAppointment;
    private javax.swing.JPanel Login;
    private javax.swing.JLabel MailIDGrievencesLabel;
    private javax.swing.JTextField NumberGrievences;
    private javax.swing.JLabel NumberGrievencesLabel;
    private javax.swing.JPanel Parent;
    private javax.swing.JTable PatienAppointmentHistory;
    private javax.swing.JButton PatientAppointmentCancel;
    private javax.swing.JLabel PatientAppointmentDate;
    private com.toedter.calendar.JDateChooser PatientAppointmentDateChooser;
    private javax.swing.JLabel PatientAppointmentDoctor;
    private javax.swing.JComboBox<String> PatientAppointmentDrList;
    private javax.swing.JLabel PatientAppointmentReason;
    private javax.swing.JScrollPane PatientAppointmentReasonArea;
    private javax.swing.JButton PatientAppointmentSubmit;
    private javax.swing.JPanel PatientHome;
    private javax.swing.JPanel Register;
    private javax.swing.JPanel RegisterViaSysAdmin;
    private javax.swing.JPanel RightComponent;
    private javax.swing.JButton SubmitGrievences;
    private javax.swing.JPanel SystemAdminHome;
    private javax.swing.JLabel SystemAdminHomeTitle;
    private javax.swing.JLabel ViewAppointmentAilment;
    private javax.swing.JLabel ViewAppointmentDate;
    private javax.swing.JLabel ViewAppointmentUsername;
    private javax.swing.JLabel ViewAppointmentWith;
    private javax.swing.JPanel ViewPatientAppointment;
    private javax.swing.JPanel VitalSignsPage;
    private javax.swing.JPanel Workspace;
    private javax.swing.JButton accountDisable;
    private javax.swing.JButton accountDisablePat;
    private javax.swing.JButton accountEnable;
    private javax.swing.JButton accountEnablePat;
    private javax.swing.JButton addNewUser;
    private javax.swing.JLabel ailmentVitalSignsRecording2;
    private javax.swing.JTextField bloodGroupFieldVitalSignsRecording;
    private javax.swing.JLabel bloodGroupIDVitalSignsRecording;
    private javax.swing.JTextField bloodPressureFieldVitalSignsRecording;
    private javax.swing.JLabel bloodPressureIDVitalSignsRecording;
    private javax.swing.JButton cancelSysAdmin;
    private javax.swing.JComboBox<String> comboBoxSysAdmin;
    private javax.swing.JButton createAppointment;
    private com.toedter.calendar.JDateChooser dateChooserSysAdmin;
    private javax.swing.JLabel diagnosisVitalSignsRecording1;
    private javax.swing.JLabel dobSysAdmin;
    private javax.swing.JTable doctorListForSysAdmin;
    private javax.swing.JLabel emailID;
    private javax.swing.JTextField encounterID;
    private javax.swing.JLabel encounterIDVitalSignsRecording;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.JTextField firstNameTextFieldSysAdmin;
    private javax.swing.JLabel gender;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderSysAdmin;
    private javax.swing.JComboBox<String> grievencesComboBox;
    private javax.swing.JLabel grievencesSysAdmin;
    private javax.swing.JTextField heightFieldVitalSignsRecording1;
    private javax.swing.JLabel heightVitalSignsRecording1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField lastNameTextFieldSysAdmin;
    private javax.swing.JLabel leftAccID;
    private javax.swing.JLabel leftWelcome;
    private javax.swing.JTextField mailIDGrievences;
    private javax.swing.JLabel mailIDSysAdmin;
    private javax.swing.JTextField mailIDTextField;
    private javax.swing.JTextField mailTextFieldSysAdmin;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JLabel medicalLicense;
    private javax.swing.JTextField medicalLicenseNumberTextField;
    private javax.swing.JLabel mlnSysAdmin;
    private javax.swing.JTextField mlnTextFieldSysAdmin;
    private javax.swing.JTextField numberTextFieldSysAdmin;
    private javax.swing.JRadioButton othersButton;
    private javax.swing.JLabel password;
    private javax.swing.JLabel password1;
    private javax.swing.JPasswordField passwordFieldSysAdmin;
    private javax.swing.JLabel passwordSysAdmin;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JPasswordField passwordTextField1;
    private javax.swing.JTextField patientAgeFieldVitalSignsRecording;
    private javax.swing.JLabel patientAgeVitalSignsRecording;
    private javax.swing.JTable patientListForSysAdmin;
    private javax.swing.JLabel phone;
    private javax.swing.JLabel phoneSysAdmin;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton register;
    private javax.swing.JButton registerSysAdmin;
    private javax.swing.JTextField respirationRateFieldVitalSignsRecording;
    private javax.swing.JLabel respirationRateIDVitalSignsRecording4;
    private javax.swing.JLabel respirationRateViewAppointment;
    private javax.swing.JLabel role;
    private javax.swing.JLabel roleSysAdmin;
    private javax.swing.JComboBox<String> rolesComboBox;
    private javax.swing.JTextField temperatureFieldVitalSignsRecording4;
    private javax.swing.JLabel temperatureViewAppointment;
    private javax.swing.JLabel temperatureVitalSignsRecording3;
    private javax.swing.JTextField unameTextSysAdmin;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel userNameSysAdmin;
    private javax.swing.JLabel username;
    private javax.swing.JLabel username1;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTextField usernameTextField1;
    private javax.swing.JLabel usernameVitalSignsRecording;
    private javax.swing.JButton viewAppoitnmentPatient;
    // End of variables declaration//GEN-END:variables


}
